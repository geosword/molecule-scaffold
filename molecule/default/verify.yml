---
- name: Verify
  hosts: all
  tasks:

  # NOTE that verify.yml does not inherit values from your playbook in anyway, they are seperate playbooks and run seperately.
  - name: set some stuff
    set_fact:
      homedir: "{{ ansible_env.HOME }}"
      package_list_command: "pacman -Q"

  - name: define packages, files, directories and other stuff you want to check lots of
    set_fact:
#      required_files:
#        - path: "{{ homedir }}/.config/nvim/airline.vim"
#          isdir: false
#          mode: '0755'
#          owner: 'keith'
#          islink: false
#      required_packages:
#        - "important_package"
#      required_pip_packages:
#        - package: "boto3"
#          venv: '{{ venvhome }}/bin/pip'
#      required_services:
#        docker.droneciserver.service:
#          state: "running"
#          status: "enabled"
#      required_ports:
#       - port: 8080
#         name: docker-proxy
#       - port: 8443
#         name: docker-proxy
#
  - name: include the standard verifier
    include_tasks: ../default/tasks/verify_root.yml

# WARNING: READ THIS if you are running port checks
# If we want to get the "listening ports", then assuming we are using a docker container to test, then we need to run
# "netstat" on localhost, and not in the container. This is because the container we're testing the role in is interfacing with the docker instance it
# itself is running in. Therefore the testing container has a SIBLING relationship with the containers it stands up, and not a parent / child relationship
# as such, its impossible (?) to get the listening ports of the "host" from within the testing container, so this must be run on localhost, and those
# results checked
# WARNING 2: READ THIS is you are running port checks
# It also assumes that the user you are running as has sudo permissions on netstat, so we can get the prog that is listening, without that, we'll only know
# if the port is open or not. Further, if testing within docker, then the listening process will always be docker-prox (or whatever the docker proxy binary is)
# undoubtedly, this would be better on a vm than a container

# Add role specific tests here
